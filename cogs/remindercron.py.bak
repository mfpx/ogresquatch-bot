""""
Copyright Â© Krypton 2021 - https://github.com/kkrypt0nn
Description:
This is a template to create your own discord bot in python.

Version: 2.7
"""

import json
import os
import platform
import random
import sys
import aiohttp
import asyncio
import discord
import pytz
import sqlite3
from pytz import timezone
import pytz.exceptions
from datetime import datetime, timedelta
from time import gmtime, strftime, time, sleep, perf_counter
import threading
import schedule
from discord.ext import commands

if not os.path.isfile("config.json"):
    sys.exit("'config.json' not found! Please add it and try again.")
else:
    with open("config.json") as file:
        config = json.load(file)

con = sqlite3.connect('db.db')  # open the database
cur = con.cursor()  # cursor object for the db

for row in cur.execute('select * from systemconfig'):
    selectedtz = timezone(row[0])

fmt = '%Y-%m-%d %H:%M:%S %Z%z'
timef = '%H:%M:%S'
datef = '%Y-%m-%d'


class cron(commands.Cog, name="cron"):
    """
    No commands here, this runs threaded scheduler tasks
    """

    def __init__(self, bot):
        self.bot = bot

    def run_continuously(interval=1):

        cease_continuous_run = threading.Event()

        class ScheduleThread(threading.Thread):
            @classmethod
            async def run(cls):
                while not cease_continuous_run.is_set():
                    schedule.run_pending()
                    await asyncio.sleep(interval)

        continuous_thread = ScheduleThread()
        continuous_thread.start()
        return cease_continuous_run

    def background_job():
        print('Hello from the background thread')

    schedule.every().second.do(background_job)

    # Start the background thread
    stop_run_continuously = run_continuously()

    # Do some other things...
    sleep(10)

    # Stop the background thread
    stop_run_continuously.set()


def setup(bot):
    bot.add_cog(cron(bot))
